class Particle {

  final float DEFAULT_SIZE = 30;
  final float MINIMUM_INITIAL_X_VELOCITY = -10;
  final float MAXIMUM_INITIAL_X_VELOCITY = 10;
  final float MINIMUM_INITIAL_Y_VELOCITY = -10;
  final float MAXIMUM_INITIAL_Y_VELOCITY = -2;
  final float ACCELERATION = 0.4;

  float x;
  float y;
  float size;
  color colour; 
  float xVelocity;
  float yVelocity;


  public Particle() {
    this.x = width / 2;
    this.y = height / 2;
    this.size = random(DEFAULT_SIZE - 20, DEFAULT_SIZE);
    this.colour = color(random(50, 255), random(50, 255), random(50, 255), 150);
    this.xVelocity = random(MINIMUM_INITIAL_X_VELOCITY, MAXIMUM_INITIAL_X_VELOCITY);
    this.yVelocity = random(MINIMUM_INITIAL_Y_VELOCITY, MAXIMUM_INITIAL_Y_VELOCITY);
  } 

  public Particle(float x, float y) {
    this.x = x;
    this.y = y;
    this.size = random(DEFAULT_SIZE - 20, DEFAULT_SIZE);
    this.colour = color(random(50, 255), random(50, 255), random(50, 255), 150);
    this.xVelocity = random(MINIMUM_INITIAL_X_VELOCITY, MAXIMUM_INITIAL_X_VELOCITY);
    this.yVelocity = random(MINIMUM_INITIAL_Y_VELOCITY, MAXIMUM_INITIAL_Y_VELOCITY);
  }
  public void draw() {
    strokeWeight(4);
    stroke(255, 102, 204);
    fill(this.colour);
    //ellipse(this.x, this.y, this.size, this.size);
    star(this.x, this.y, 15, 25, 5);
  }

  public void move() {
    this.x += this.xVelocity;
    this.y += this.yVelocity;
    this.yVelocity += ACCELERATION;
  }

  void star(float x, float y, float radius1, float radius2, int npoints) {
    float angle = TWO_PI / npoints;
    float halfAngle = angle/2.0;
    beginShape();
    for (float a = 0; a < TWO_PI; a += angle) {
      float sx = x + cos(a) * radius2;
      float sy = y + sin(a) * radius2;
      vertex(sx, sy);
      sx = x + cos(a+halfAngle) * radius1;
      sy = y + sin(a+halfAngle) * radius1;
      vertex(sx, sy);
    }
    endShape(CLOSE);
  }
  
    boolean onScreen() { //if you have a single if statement in a boolean function, you can make it return the value of itself.
      return x > 0 && x < width && y > 0 && y < height; //the particle uses its x and y to determine if it is still on the screen.
    }
  }
